insult - оскорблять
patient - терпеливый
seem - казаться
reject - отвергать, отклонять
-------Hotkey for PhpStorm----------
ctrl + w - Select successively increasing code blocks
Ctrl + Shift + V  Paste from recent buffers.
Ctrl + Y  Delete line at caret
Ctrl + R  Replace
Ctrl + Shift + F  Find in path
Ctrl + N  Go to class
Ctrl + Shift + N  Go to file
----------------
VCS
Ctrl + K  Commit project to VCS
Ctrl + T  Update project from VCS
Alt + Shift + C  View recent changes
----------------
Ctrl + Alt + Enter - enter before line
hold Alt - create more carret
Ctrl + Q - documentation
Ctrl + space - open prompt
CTRL+ ALT + L - Reformat Code
CTRL+SHIFT+Backspace - Last Edition Location
----------------
Alt + insert - generate code
Alt + Enter  Show intention actions and quick-fixes
Ctrl + e - recent files
double * shift - search files
Ctrl + Alt + T - surround with (foreach or some)
Ctrl + O  Override methods
Ctrl + I  Implement methods
Ctrl?+ Shift + J - join lines
Ctrl?+?Shift + ( ]/[ )  Select till code block end/start
Ctrl + G  Go to line
Ctrl + B or Ctrl + Click  Go to declaration
Ctrl + Alt + S - config PHPStorm



Скажем только, что расставить курсоры можно с помощью Alt+Click; добавить следующее совпадение в выделение: Alt+J удалить совпадение из выделения: Alt+Shift+J;
-----------------------------
ng-model - связывает форму с моделью. Это значит, что любые 
изменения в форме обновят данные модели, а при изменении модели - обновится форма
ng-app обозначает корень AngularJS-приложения и обычно располагается в корне страницы.
ng-controller - назначает поведение области видимости. Это ключевой аспект поддержки в
Angular шаблона Модель-Вид-Контроллер.
//$scope содержит данные модели. Это связующее звено между контроллером и видом.
//$scope всего лишь один из сервисов, внедренных в контроллер.
ng-repeat создает экземпляры по шаблону для каждого элемента коллекции. Каждый экземпляр 
шаблона получает собственную область видимости, в которой создаются переменные, имеющиеся
в текущем элементе коллекции и в $index устанавливается индекс или ключ элемента.
ng-app="customModule" - активирует модуль.
Создание нового модуля:
var myModule = angular.module ('myModule', []);
---------------------------
$index - системная переменная изначально равна 0 чаще всего используется для указания
 позиции.
even и odd используются зачастую чтобы задавать четным и нечетным элементам разные стили
$even возвращает true если элемент четный.
ng-if - используется для отображения элемента в DOM  в зависимости от условия
 например "$first || $last" означает что будут отображены в DOM  только 1й и последний 
элементы
<ng-include src="'../table.html'"></ng-include> - подключает файлы с помощью ajax

ng-switch-when - определяет участок разметки с которым ассоциируется условие
ng-switch - может быть примененна как элемент и как атрибут, а ng-switch-when и 
ng-switch-default только как атрибуты 
здесь у атрибута ng-switch присутствует атрибут on который указывает на некое условие 
в зависимости от условия будет отображатся та или инная часть разметки.
------------------------
ng-checked используется для установки значения выбран\не выбран для input
    ng-disabled используется для disable элемента применяется для input и button
    ng-readonly используется для атрибута readonly применяется к input
    ng-selected используется для атрибута selected в option-->
    <!--ng-href используется для указания url в href
    ng-src используется для указания физического пути-->
------------------------
существует несколько переменных валидации в angular:
        $pristine  возвращает true если пользователь не взаимодействовал с элементами формы
        $dirty  возвращает true если пользователь взаимодействовал с элементами формы
        $valid возвращает true если форма валидна
        $invalid возвращает true если форма невалидна
        $error содержит информацию об ошибках валидации
------------------------
ng-hide - спрятать елемент если true
ng-submit - Определяет какую функцию вызивать при отправке формы нажатием на кнопку сабмит
ng-show - противоположность к ng-hide принимает параметр как myForm.userEmail.$invalid
------валидация-----------
ng-change используется для определения выражения которое будет выполянтся когда контент элемента изменится
    ng-minlength устанавливает минимальное колличество символов для того чтобы данные введенные в элемент считались валидными
    ng-maxlength устанавливает максимальное колличество символов для того чтобы данные введенные в элемент считались валидными
    ng-pattern устанавливает регулярное выражение, соответствуя которому данные будут считатся валидными
    ng-required устанавливает обязательность введения данных для элемента
    пример:
     <input name="sample" class="form-control" ng-model="inputValue" ng-required="requireValue" 
     ng-minlength="3" ng-maxlength="10" ng-pattern="matchPattern" />
      <!--Обратите внимание что для элементов input у которых атрибут type равен email, url, number
         не нужно указывать ng-pattern так как angular уже использует его для проверки на валидность содержимое элемента-->
<!--Атрибуты которые могут применятся к input  с типом checkbox :
        ng-change используется для определения выражения которое будет выполянтся когда контент элемента изменится
        ng-true-value определяет значение которое установится выражением привязки данных когда состояние элемента будет "выбран"
        ng-false-value определяет значение которое установится выражением привязки данных когда состояние элемента будет "не выбран"-->
        Селекты и работа с ними
        !--ng-options="item.action for item in tasks" это выражение указывает сгенерировать элементы option для каждого элемента из tasks и отобразить содержимое свойства item.action-->
        Группировки в селекте
         <select ng-model="value" ng-options="task.action group by task.priority for task in tasks">
                            <option value="">Select one</option>
                        </select>
                        <!--используйте group by для для создания группировок элементов option-->
-------------------Контроллеры и scope--------------------------------
 <!--Методы для посылки и получения events:
    $broadcast(name, args) отсылает event из текущего scope всем дочерним, 1й аргумент - имя события, 2й - объект предоставляющий дополнительные данные
    $emit(name, args) отсылает event от текущего scope  к rootScope
    $on(name, handler) регистрирует обработчик который будет вызван когда scope инициирует необходимый event,
    аргументы: 1й - название события для которого сработает обработчик 2й - функция обработчик-->
    ------------Аngular работает с другими библиотеками--------------------
    <!--$apply(expression) применяет изменения к scope
$watch(expression, handler) регистрирует обрабочик который будет срабатывать при изменении выражения expression
$watchCollection(object, handler) регистрирует обработчик который будет реагировать когда хоть какое-то свойство из коллекции свойств изменится-->
---------------------------Фильтры-----------------------------



